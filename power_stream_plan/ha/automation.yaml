alias: PowerPlan ▸ Řízení akumulace a režimu měniče
description: "Automatizace pro PowerPlan řízení tepelné akumulace, baterie a měniče na základě predikce"
triggers:
  - entity_id:
      - sensor.powerplan_charger_use_mode
      - sensor.powerplan_manual_mode_select
      - sensor.powerplan_upper_accumulation_on
      - sensor.powerplan_lower_accumulation_on
      - sensor.powerplan_max_heat_on
      - sensor.powerplan_forced_heating_block
      - sensor.powerplan_battery_discharge_power
      - sensor.powerplan_battery_target_soc
      - sensor.powerplan_reserve_power_charging
      - sensor.powerplan_minimum_battery_soc
    trigger: state
actions:
  # Nastavení režimu měniče
  - target:
      entity_id: select.solax_charger_use_mode
    data:
      option: "{{ powerplan_mode }}"
    action: select.select_option
  
  # Nastavení manuálního režimu baterie (pouze pokud je aktivní Manual Mode)
  - condition: template
    value_template: "{{ powerplan_mode == 'Manual Mode' }}"
  - target:
      entity_id: select.solax_manual_mode_select
    data:
      option: "{{ powerplan_manual_mode }}"
    action: select.select_option
  
  # Ovládání horní akumulace
  - target:
      entity_id: switch.tepelnaakumulace_povolen_horn_akumulace
    action: |
      {% if powerplan_upper_accu %}
        switch.turn_on
      {% else %}
        switch.turn_off
      {% endif %}
  
  # Ovládání spodní akumulace  
  - target:
      entity_id: switch.tepelnaakumulace_povolen_spodn_akumulace
    action: |
      {% if powerplan_lower_accu %}
        switch.turn_on
      {% else %}
        switch.turn_off
      {% endif %}
  
  # Maximální ohřev ze sítě
  - target:
      entity_id: switch.tepelnaakumulace_maxim_ln_oh_ev_ze_s_t
    action: |
      {% if powerplan_maxh %}
        switch.turn_on
      {% else %}
        switch.turn_off
      {% endif %}
  
  # Blokování nuceného ohřevu
  - target:
      entity_id: switch.tepelnaakumulace_blokov_n_nucen_ho_oh_evu
    action: |
      {% if powerplan_block_heating %}
        switch.turn_on
      {% else %}
        switch.turn_off
      {% endif %}
mode: restart
variables:
  # Pojistka proti překročení denního limitu EEPROM zápisů
  eeprom_counter: "{{ states('counter.denni_eeprom_zapisy') | float(0) }}"
  safety_mode: "{{ eeprom_counter > 10 }}"
  
  # Pouze režim měniče se nastaví na backup při překročení limitu (chrání EEPROM)
  powerplan_mode: "{{ 'Back Up Mode' if safety_mode else states('sensor.powerplan_charger_use_mode') }}"
  powerplan_manual_mode: "{{ states('sensor.powerplan_manual_mode_select') }}"
  
  # Akumulace může normálně fungovat podle PowerPlan logiky (nemá EEPROM)
  powerplan_upper_accu: "{{ is_state('sensor.powerplan_upper_accumulation_on', 'True') }}"
  powerplan_lower_accu: "{{ is_state('sensor.powerplan_lower_accumulation_on', 'True') }}"
  powerplan_maxh: "{{ is_state('sensor.powerplan_max_heat_on', 'True') }}"
  powerplan_block_heating: "{{ is_state('sensor.powerplan_forced_heating_block', 'True') }}"
  powerplan_discharge_power: "{{ states('sensor.powerplan_battery_discharge_power') | float(0) }}"
  powerplan_target_soc: "{{ states('sensor.powerplan_battery_target_soc') | float(0) }}"
  powerplan_reserve_power: "{{ states('sensor.powerplan_reserve_power_charging') | float(0) }}"
  powerplan_min_soc: "{{ states('sensor.powerplan_minimum_battery_soc') | float(0) }}"
